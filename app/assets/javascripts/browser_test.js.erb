function blacklisted() {
  var parser = new UAParser();
  var browser = parser.getResult().browser.name;
  var version = parseFloat(parser.getResult().browser.version);

  return (browser === 'IE' && version < 8.0);
}

function addLoadingNotice(label, $container) {
  return $('<p class="loading"/>').html(label + ': <span class="state">Loading...</span>').appendTo($container);
}

function setErrorNotice($notice, message) {
  message = message || "Error";
  $notice.find('span.state').html(message);
  $notice.removeClass('loading').addClass('text-error');
}

function setSuccessNotice($notice, message) {
  message = message || "Success";

  $notice.find('span.state').html(message);
  $notice.removeClass('loading').addClass('text-success');
}

function domainFromUrl(url) {
	var a = document.createElement('a');
	a.href = url;
	return a.hostname;
}

function storeUserData(label, value) {
  window.userData = window.userData || {};
  window.userData[label] = value;
}

function checkCustom(label, testFunction) {
  var $notice = addLoadingNotice(label, $('.results'));

  function success(message) {
    storeUserData(label, message || true);
    setSuccessNotice($notice, message);
  }

  function error(message) {
    storeUserData(label, message || false);
    setErrorNotice($notice, message);
  }

  testFunction(success, error);
}

function checkScript(description, src) {
  checkCustom(domainFromUrl(src), function (pass, fail) {
    var $script;
    $script = $('<script/>').
      on('load', function () { pass(); }).
      on('error', function () { fail(); }).
      attr("type", "text/javascript").
      attr("src", src);

      document.body.appendChild($script[0]);
  });
}

function checkImage(description, src) {
  checkCustom(domainFromUrl(src), function (pass, fail) {
    $('<img/>').
      on('load', function () { pass(); }).
      on('error', function () { fail(); }).
      attr("src", src);
  });
}

function checkDefined(label, variable) {
  checkCustom(label, function (pass, fail) {
    if (typeof variable === "undefined") {
      fail();
    } else {
      pass();
    }
  });
}

function testAll(){
  checkCustom('User Agent String', function(success, error) {
    if (navigator.userAgent === undefined) {
      error('Undefined');
    } else if (blacklisted()) {
      error(navigator.userAgent + "\n Your browser may be in a compatibility mode supporting an older version of IE.");
    } else {
      success(navigator.userAgent);
    }
  });

  checkCustom('Window Size', function(success, error) {
    var viewport = window.session.device.viewport;

    if (viewport.width === undefined && viewport.height === undefined) {
      error('Undefined');
    } else {
      success(viewport.width + " x " + viewport.height);
    }
  });

  checkCustom('Screen Size', function(success, error) {
    var screen = window.session.device.screen;

    if (screen.width === undefined && screen.height === undefined) {
      error("Undefined");
    } else {
      success(screen.width + " x " + screen.height);
    }
  });

  checkCustom('Operating System', function(success, error) {
    if (window.session.browser.os === undefined) {
      error("Undefined");
    } else {
      success(window.session.browser.os);
    }
  });

  checkCustom('Browser', function(success, error) {
    var browser = window.session.browser;

    if (browser.browser === undefined && browser.version === undefined) {
      error("Undefined");
    } else {
      success(browser.browser + " " + browser.version);
    }
  });

  checkCustom('Date', function(success, error) {
    if (Date() === undefined) {
      error('Undefined');
    } else {
      success(Date());
    }
  });

  checkImage("Platform: Public CDN", "https://assets-cdn.continuity.net/production/assets/cc_logos/CC_logo_white.png");
  checkImage("Platform: Control", "https://control.continuity.net/browser-test.png");
  checkImage("Platform: Private Assets", "https://control-production.s3.amazonaws.com/browser-test.png");

  checkDefined("Support: Live Chat", window.lpTag);
  checkDefined("Support: Walk-throughs", window._walkmeInternals);
  checkImage("Support: Walk-through Assets", "https://d2qhvajt3imc89.cloudfront.net/customers/Continuity+Control/Continuity_01_up.png");
  checkImage("Support: Live Chat Assets", "https://cdn2.hubspot.net/hub/40143/file-2606587361-png/Chat_Images/LiveChat_011.png");
  checkImage("Support: Live Chat Assets", "https://lpcdn.lpsnmedia.net/le_unified_window/8.4.0.1-release_1917/resources/icons/desktop/sprites_v1.png");

  checkImage("SLA Monitoring: Performance Monitoring", "https://rum-collector.pingdom.net/img/beacon.gif");

  checkDefined("SLA Monitoring: Error Monitoring", window.Honeybadger);
  checkDefined("Platform: Branch Maps", window.google && window.google.maps);
  checkDefined("SLA Monitoring: Analytics", window.ga);

  checkCustom("Platform: Document Viewer", function (pass, fail) {
    var crocViewer, $crocContainer;

    $crocContainer = $('#boxViewTest');
    crocViewer = Crocodoc.createViewer($crocContainer, { url: $crocContainer.data('session-url') });

    crocViewer.on('fail', function (e) { fail(); });
    crocViewer.on('ready', function (e) { pass(); });

    crocViewer.load();
  });
}

$(function(){
  Honeybadger.configure({
    api_key: '097b0947f2920dc6355327d2c1c2d1f8' // Public API key
  });

  try {
    testAll();
  } catch(e) {
    Honeybadger.notify(e);
  }
});

